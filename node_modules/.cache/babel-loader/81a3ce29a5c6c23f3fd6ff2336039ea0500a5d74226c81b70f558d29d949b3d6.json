{"ast":null,"code":"// Mock data for building schemes\nconst mockSchemes = [{\n  id: 1,\n  parameters: {\n    grid_spacing_x: 8.0,\n    grid_spacing_y: 8.0,\n    x_extents: [0, 5],\n    y_extents: [0, 5],\n    num_floors: 5,\n    floor_height: 3.5\n  },\n  evaluations: {\n    steel_tonnage: 450,\n    column_size: \"UC305x305x97\",\n    beam_size: \"UB457x191x82\",\n    carbon_footprint: 650,\n    cost_per_sqm: 2500\n  },\n  width: 5,\n  height: 5,\n  depth: 5,\n  color: \"#4287f5\"\n}, {\n  id: 2,\n  parameters: {\n    grid_spacing_x: 7.5,\n    grid_spacing_y: 7.5,\n    x_extents: [0, 6],\n    y_extents: [0, 6],\n    num_floors: 8,\n    floor_height: 3.2\n  },\n  evaluations: {\n    steel_tonnage: 720,\n    column_size: \"UC356x368x129\",\n    beam_size: \"UB533x210x92\",\n    carbon_footprint: 980,\n    cost_per_sqm: 2800\n  },\n  width: 6,\n  height: 8,\n  depth: 6,\n  color: \"#42b883\"\n}, {\n  id: 3,\n  parameters: {\n    grid_spacing_x: 9.0,\n    grid_spacing_y: 9.0,\n    x_extents: [0, 4],\n    y_extents: [0, 4],\n    num_floors: 4,\n    floor_height: 4.0\n  },\n  evaluations: {\n    steel_tonnage: 380,\n    column_size: \"UC254x254x73\",\n    beam_size: \"UB406x178x60\",\n    carbon_footprint: 520,\n    cost_per_sqm: 2300\n  },\n  width: 4,\n  height: 4,\n  depth: 4,\n  color: \"#e74c3c\"\n}, {\n  id: 4,\n  parameters: {\n    grid_spacing_x: 8.5,\n    grid_spacing_y: 8.5,\n    x_extents: [0, 5],\n    y_extents: [0, 5],\n    num_floors: 6,\n    floor_height: 3.8\n  },\n  evaluations: {\n    steel_tonnage: 550,\n    column_size: \"UC305x305x97\",\n    beam_size: \"UB457x191x82\",\n    carbon_footprint: 750,\n    cost_per_sqm: 2600\n  },\n  width: 5,\n  height: 6,\n  depth: 5,\n  color: \"#9b59b6\"\n}];\n\n// Function to get all schemes\nexport const getAllSchemes = () => {\n  return mockSchemes;\n};\n\n// Function to get a scheme by ID\nexport const getSchemeById = id => {\n  return mockSchemes.find(scheme => scheme.id === id) || null;\n};\n\n// Create a named export object\nconst schemeService = {\n  getAllSchemes,\n  getSchemeById\n};\nexport default schemeService;","map":{"version":3,"names":["mockSchemes","id","parameters","grid_spacing_x","grid_spacing_y","x_extents","y_extents","num_floors","floor_height","evaluations","steel_tonnage","column_size","beam_size","carbon_footprint","cost_per_sqm","width","height","depth","color","getAllSchemes","getSchemeById","find","scheme","schemeService"],"sources":["/Users/shriti/Downloads/CapstoneProj/FreshCode/src/services/mockSchemeData.js"],"sourcesContent":["// Mock data for building schemes\nconst mockSchemes = [\n  {\n    id: 1,\n    parameters: {\n      grid_spacing_x: 8.0,\n      grid_spacing_y: 8.0,\n      x_extents: [0, 5],\n      y_extents: [0, 5],\n      num_floors: 5,\n      floor_height: 3.5\n    },\n    evaluations: {\n      steel_tonnage: 450,\n      column_size: \"UC305x305x97\",\n      beam_size: \"UB457x191x82\",\n      carbon_footprint: 650,\n      cost_per_sqm: 2500\n    },\n    width: 5,\n    height: 5,\n    depth: 5,\n    color: \"#4287f5\"\n  },\n  {\n    id: 2,\n    parameters: {\n      grid_spacing_x: 7.5,\n      grid_spacing_y: 7.5,\n      x_extents: [0, 6],\n      y_extents: [0, 6],\n      num_floors: 8,\n      floor_height: 3.2\n    },\n    evaluations: {\n      steel_tonnage: 720,\n      column_size: \"UC356x368x129\",\n      beam_size: \"UB533x210x92\",\n      carbon_footprint: 980,\n      cost_per_sqm: 2800\n    },\n    width: 6,\n    height: 8,\n    depth: 6,\n    color: \"#42b883\"\n  },\n  {\n    id: 3,\n    parameters: {\n      grid_spacing_x: 9.0,\n      grid_spacing_y: 9.0,\n      x_extents: [0, 4],\n      y_extents: [0, 4],\n      num_floors: 4,\n      floor_height: 4.0\n    },\n    evaluations: {\n      steel_tonnage: 380,\n      column_size: \"UC254x254x73\",\n      beam_size: \"UB406x178x60\",\n      carbon_footprint: 520,\n      cost_per_sqm: 2300\n    },\n    width: 4,\n    height: 4,\n    depth: 4,\n    color: \"#e74c3c\"\n  },\n  {\n    id: 4,\n    parameters: {\n      grid_spacing_x: 8.5,\n      grid_spacing_y: 8.5,\n      x_extents: [0, 5],\n      y_extents: [0, 5],\n      num_floors: 6,\n      floor_height: 3.8\n    },\n    evaluations: {\n      steel_tonnage: 550,\n      column_size: \"UC305x305x97\",\n      beam_size: \"UB457x191x82\",\n      carbon_footprint: 750,\n      cost_per_sqm: 2600\n    },\n    width: 5,\n    height: 6,\n    depth: 5,\n    color: \"#9b59b6\"\n  }\n];\n\n// Function to get all schemes\nexport const getAllSchemes = () => {\n  return mockSchemes;\n};\n\n// Function to get a scheme by ID\nexport const getSchemeById = (id) => {\n  return mockSchemes.find(scheme => scheme.id === id) || null;\n};\n\n// Create a named export object\nconst schemeService = {\n  getAllSchemes,\n  getSchemeById\n};\n\nexport default schemeService; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}