{"ast":null,"code":"var _jsxFileName = \"/Users/shriti/Downloads/CapstoneProj/FreshCode/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport SchemeGrid from './components/SchemeGrid';\nimport ChatInterface from './components/ChatInterface';\n\n// API URL for the backend\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:8001\"; // FastAPI backend URL\n\nfunction App() {\n  _s();\n  // State for schemes/cuboids\n  const [schemes, setSchemes] = useState([]);\n  const [error, setError] = useState(null);\n\n  // Agent state\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  // Handle sending a message from the ChatInterface\n  const handleSendMessage = async (prompt, updateCallback) => {\n    if (!prompt.trim() || isProcessing) return;\n    setIsProcessing(true);\n    setSchemes([]); // Clear previous schemes\n    try {\n      const response = await axios.post(`${API_URL}/query`, {\n        query: prompt\n      });\n      const data = response.data;\n      const {\n        session_id\n      } = data;\n\n      // Start polling for results\n      const pollInterval = setInterval(async () => {\n        try {\n          const sessionResponse = await axios.get(`${API_URL}/session/${session_id}`);\n          const sessionData = sessionResponse.data;\n\n          // Update schemes for visualization\n          if (sessionData.schemes && Array.isArray(sessionData.schemes)) {\n            setSchemes(sessionData.schemes);\n          }\n\n          // Send updates to the ChatInterface\n          updateCallback(sessionData);\n\n          // Stop polling if the session is complete or has an error\n          if (sessionData.status === \"completed\" || sessionData.status === \"error\") {\n            clearInterval(pollInterval);\n            setIsProcessing(false);\n          }\n        } catch (pollError) {\n          console.error(\"Error polling results:\", pollError);\n          setError(\"Failed to get results. Please try again.\");\n          clearInterval(pollInterval);\n          setIsProcessing(false);\n        }\n      }, 2000); // Poll every 2 seconds\n    } catch (error) {\n      console.error(\"Error processing query:\", error);\n      setError(\"Failed to start agent session. The API server may be offline.\");\n      setIsProcessing(false);\n    }\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      style: {\n        color: 'red',\n        padding: '20px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"split-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"visualization-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vis-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"3D Visualization\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Click on a scheme to view its details in a side panel. Click and drag to rotate, scroll to zoom.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"visualization-content\",\n          children: /*#__PURE__*/_jsxDEV(SchemeGrid, {\n            schemes: schemes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"agent-area\",\n        children: /*#__PURE__*/_jsxDEV(ChatInterface, {\n          onSendMessage: handleSendMessage,\n          isProcessing: isProcessing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"DdFTUJnsXDhi+M2cH6Z4MzMFftI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","SchemeGrid","ChatInterface","jsxDEV","_jsxDEV","API_URL","App","_s","schemes","setSchemes","error","setError","isProcessing","setIsProcessing","handleSendMessage","prompt","updateCallback","trim","response","post","query","data","session_id","pollInterval","setInterval","sessionResponse","get","sessionData","Array","isArray","status","clearInterval","pollError","console","className","style","color","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onSendMessage","_c","$RefreshReg$"],"sources":["/Users/shriti/Downloads/CapstoneProj/FreshCode/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport SchemeGrid from './components/SchemeGrid';\nimport ChatInterface from './components/ChatInterface';\n\n// API URL for the backend\nconst API_URL = \"http://localhost:8001\"; // FastAPI backend URL\n\nfunction App() {\n  // State for schemes/cuboids\n  const [schemes, setSchemes] = useState([]);\n  const [error, setError] = useState(null);\n  \n  // Agent state\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  // Handle sending a message from the ChatInterface\n  const handleSendMessage = async (prompt, updateCallback) => {\n    if (!prompt.trim() || isProcessing) return;\n    setIsProcessing(true);\n    setSchemes([]); // Clear previous schemes\n    try {\n      const response = await axios.post(`${API_URL}/query`, { query: prompt });\n      const data = response.data;\n      const { session_id } = data;\n      \n      // Start polling for results\n      const pollInterval = setInterval(async () => {\n        try {\n          const sessionResponse = await axios.get(`${API_URL}/session/${session_id}`);\n          const sessionData = sessionResponse.data;\n          \n          // Update schemes for visualization\n          if (sessionData.schemes && Array.isArray(sessionData.schemes)) {\n            setSchemes(sessionData.schemes);\n          }\n          \n          // Send updates to the ChatInterface\n          updateCallback(sessionData);\n          \n          // Stop polling if the session is complete or has an error\n          if (sessionData.status === \"completed\" || sessionData.status === \"error\") {\n            clearInterval(pollInterval);\n            setIsProcessing(false);\n          }\n        } catch (pollError) {\n          console.error(\"Error polling results:\", pollError);\n          setError(\"Failed to get results. Please try again.\");\n          clearInterval(pollInterval);\n          setIsProcessing(false);\n        }\n      }, 2000); // Poll every 2 seconds\n    } catch (error) {\n      console.error(\"Error processing query:\", error);\n      setError(\"Failed to start agent session. The API server may be offline.\");\n      setIsProcessing(false);\n    }\n  };\n\n  if (error) {\n    return <div className=\"loading\" style={{ color: 'red', padding: '20px' }}>{error}</div>;\n  }\n\n  return (\n    <div className=\"app-container\">\n      {/* Split layout with visualization area and agent area */}\n      <div className=\"split-layout\">\n        {/* Visualization Area (Left Side) */}\n        <div className=\"visualization-area\">\n          <div className=\"vis-header\">\n            <h3>3D Visualization</h3>\n            <p>Click on a scheme to view its details in a side panel. Click and drag to rotate, scroll to zoom.</p>\n          </div>\n          \n          {/* Add scrollable container */}\n          <div className=\"visualization-content\">\n            {/* Use the SchemeGrid component */}\n            <SchemeGrid schemes={schemes} />\n          </div>\n        </div>\n        \n        {/* Agent Area (Right Side) */}\n        <div className=\"agent-area\">\n          <ChatInterface\n            onSendMessage={handleSendMessage}\n            isProcessing={isProcessing}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}