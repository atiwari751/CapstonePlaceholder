{"ast":null,"code":"var _jsxFileName = \"/Users/shriti/Downloads/CapstoneProj/FreshCode/src/components/ChatInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport ChatMessage from './ChatMessage';\nimport './ChatInterface.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInterface = ({\n  onSendMessage,\n  isProcessing\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const messagesEndRef = useRef(null);\n  const chatContainerRef = useRef(null);\n\n  // Scroll to bottom when messages change\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [messages]);\n\n  // Function to format current time\n  const getCurrentTime = () => {\n    const now = new Date();\n    return now.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  // Handle form submission\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!inputValue.trim() || isProcessing) return;\n\n    // Create new user message\n    const newUserMessage = {\n      id: Date.now(),\n      text: inputValue,\n      timestamp: getCurrentTime(),\n      isUser: true\n    };\n\n    // Add user message to chat\n    setMessages(prevMessages => [...prevMessages, newUserMessage]);\n\n    // Create placeholder for agent response\n    const agentPlaceholder = {\n      id: Date.now() + 1,\n      text: \"Thinking...\",\n      timestamp: getCurrentTime(),\n      isUser: false,\n      results: {}\n    };\n\n    // Add agent placeholder to chat\n    setMessages(prevMessages => [...prevMessages, agentPlaceholder]);\n\n    // Send message to parent component for processing\n    onSendMessage(inputValue, update => {\n      // Update the agent message with results as they come in\n      setMessages(prevMessages => {\n        // Find the last agent message (placeholder)\n        const lastAgentIndex = [...prevMessages].reverse().findIndex(msg => !msg.isUser);\n        if (lastAgentIndex === -1) return prevMessages;\n\n        // Calculate the actual index in the array\n        const actualIndex = prevMessages.length - 1 - lastAgentIndex;\n\n        // Create a new array with the updated agent message\n        const updatedMessages = [...prevMessages];\n        updatedMessages[actualIndex] = {\n          ...updatedMessages[actualIndex],\n          text: update.finalAnswer ? null : \"Processing your request...\",\n          results: update.results,\n          finalAnswer: update.finalAnswer,\n          timestamp: getCurrentTime()\n        };\n        return updatedMessages;\n      });\n    });\n\n    // Clear input field\n    setInputValue('');\n  };\n\n  // Handle starting a new session\n  const handleNewSession = () => {\n    setMessages([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-interface\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"SCHEMING AGENT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"new-session-button\",\n        onClick: handleNewSession,\n        children: \"New Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      ref: chatContainerRef,\n      children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-chat\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No messages yet. Start a conversation!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this) : messages.map(message => /*#__PURE__*/_jsxDEV(ChatMessage, {\n        message: message,\n        isUser: message.isUser\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"chat-input-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value),\n        placeholder: \"Type your message...\",\n        disabled: isProcessing,\n        className: \"chat-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isProcessing || !inputValue.trim(),\n        className: \"send-button\",\n        children: isProcessing ? \"...\" : \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"BwVHBsz5lgCRzZH8A9sRv4ytuq0=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useRef","useEffect","ChatMessage","jsxDEV","_jsxDEV","ChatInterface","onSendMessage","isProcessing","_s","messages","setMessages","inputValue","setInputValue","messagesEndRef","chatContainerRef","current","scrollIntoView","behavior","getCurrentTime","now","Date","toLocaleTimeString","hour","minute","handleSubmit","e","preventDefault","trim","newUserMessage","id","text","timestamp","isUser","prevMessages","agentPlaceholder","results","update","lastAgentIndex","reverse","findIndex","msg","actualIndex","length","updatedMessages","finalAnswer","handleNewSession","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","map","message","onSubmit","type","value","onChange","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["/Users/shriti/Downloads/CapstoneProj/FreshCode/src/components/ChatInterface.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport ChatMessage from './ChatMessage';\nimport './ChatInterface.css';\n\nconst ChatInterface = ({ onSendMessage, isProcessing }) => {\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const messagesEndRef = useRef(null);\n  const chatContainerRef = useRef(null);\n\n  // Scroll to bottom when messages change\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, [messages]);\n\n  // Function to format current time\n  const getCurrentTime = () => {\n    const now = new Date();\n    return now.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n  };\n\n  // Handle form submission\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    if (!inputValue.trim() || isProcessing) return;\n    \n    // Create new user message\n    const newUserMessage = {\n      id: Date.now(),\n      text: inputValue,\n      timestamp: getCurrentTime(),\n      isUser: true\n    };\n    \n    // Add user message to chat\n    setMessages(prevMessages => [...prevMessages, newUserMessage]);\n    \n    // Create placeholder for agent response\n    const agentPlaceholder = {\n      id: Date.now() + 1,\n      text: \"Thinking...\",\n      timestamp: getCurrentTime(),\n      isUser: false,\n      results: {}\n    };\n    \n    // Add agent placeholder to chat\n    setMessages(prevMessages => [...prevMessages, agentPlaceholder]);\n    \n    // Send message to parent component for processing\n    onSendMessage(inputValue, (update) => {\n      // Update the agent message with results as they come in\n      setMessages(prevMessages => {\n        // Find the last agent message (placeholder)\n        const lastAgentIndex = [...prevMessages].reverse().findIndex(msg => !msg.isUser);\n        if (lastAgentIndex === -1) return prevMessages;\n        \n        // Calculate the actual index in the array\n        const actualIndex = prevMessages.length - 1 - lastAgentIndex;\n        \n        // Create a new array with the updated agent message\n        const updatedMessages = [...prevMessages];\n        updatedMessages[actualIndex] = {\n          ...updatedMessages[actualIndex],\n          text: update.finalAnswer ? null : \"Processing your request...\",\n          results: update.results,\n          finalAnswer: update.finalAnswer,\n          timestamp: getCurrentTime()\n        };\n        \n        return updatedMessages;\n      });\n    });\n    \n    // Clear input field\n    setInputValue('');\n  };\n\n  // Handle starting a new session\n  const handleNewSession = () => {\n    setMessages([]);\n  };\n\n  return (\n    <div className=\"chat-interface\">\n      <div className=\"chat-header\">\n        <h2>SCHEMING AGENT</h2>\n        <button className=\"new-session-button\" onClick={handleNewSession}>\n          New Session\n        </button>\n      </div>\n      \n      <div className=\"chat-messages\" ref={chatContainerRef}>\n        {messages.length === 0 ? (\n          <div className=\"empty-chat\">\n            <p>No messages yet. Start a conversation!</p>\n          </div>\n        ) : (\n          messages.map(message => (\n            <ChatMessage \n              key={message.id} \n              message={message} \n              isUser={message.isUser} \n            />\n          ))\n        )}\n        <div ref={messagesEndRef} />\n      </div>\n      \n      <form className=\"chat-input-form\" onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={inputValue}\n          onChange={(e) => setInputValue(e.target.value)}\n          placeholder=\"Type your message...\"\n          disabled={isProcessing}\n          className=\"chat-input\"\n        />\n        <button \n          type=\"submit\" \n          disabled={isProcessing || !inputValue.trim()}\n          className=\"send-button\"\n        >\n          {isProcessing ? \"...\" : \"Send\"}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ChatInterface; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}