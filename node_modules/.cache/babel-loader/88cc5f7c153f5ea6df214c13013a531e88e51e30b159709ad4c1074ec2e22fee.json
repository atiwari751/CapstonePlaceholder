{"ast":null,"code":"var _jsxFileName = \"/Users/shriti/Downloads/CapstoneProj/FreshCode/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport SchemeGrid from './components/SchemeGrid'; // Component for 3D visualization\nimport AgentSession from './components/AgentSession'; // Component to show agent's work\n// Import mock data from service instead of hardcoding\nimport ChatMessage from './components/ChatMessage'; // Component to render a single chat message\n\n// API URL for the backend\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:8001\"; // FastAPI backend URL\n\nfunction App() {\n  _s();\n  // State for schemes/cuboids\n  const [schemes, setSchemes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Agent state\n  const [currentPrompt, setCurrentPrompt] = useState('');\n  const [sessionId, setSessionId] = useState(null);\n  const [sessionStatus, setSessionStatus] = useState('idle');\n  const [sessionResults, setSessionResults] = useState({});\n  const [finalAnswer, setFinalAnswer] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [chatHistory, setChatHistory] = useState([]);\n  const [pollingActive, setPollingActive] = useState(false);\n\n  // Load schemes on component mount\n  useEffect(() => {\n    // Only load mock schemes if there's no active session\n    if (!sessionId) {\n      try {\n        setSchemes([]); // Start with no schemes\n        setLoading(false);\n      } catch (err) {\n        console.error(\"Error loading schemes:\", err);\n        setError(\"Failed to load schemes. Please try again later.\");\n        setLoading(false);\n      }\n    }\n  }, [sessionId]);\n\n  // Poll results function with useCallback to avoid dependency issues\n  const pollResults = useCallback(async () => {\n    if (!sessionId || !pollingActive) return false;\n    try {\n      const response = await axios.get(`${API_URL}/session/${sessionId}`);\n      const data = response.data;\n\n      // Update results\n      setSessionResults(data.results || {});\n\n      // Update chat history\n      if (data.chat_history && Array.isArray(data.chat_history)) {\n        setChatHistory(data.chat_history);\n      }\n\n      // Update final answer\n      if (data.final_answer) {\n        setFinalAnswer(data.final_answer);\n      }\n\n      // Update schemes - completely replace any existing schemes\n      if (data.schemes && Array.isArray(data.schemes)) {\n        console.log(\"Received schemes:\", data.schemes);\n        setSchemes(data.schemes);\n      }\n\n      // Check if processing is complete\n      if (data.status === \"completed\" || data.status === \"error\") {\n        setPollingActive(false);\n        setIsProcessing(false); // Re-enable input\n        setSessionStatus(data.status);\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error(\"Error polling results:\", error);\n      setError(\"Failed to get results. Please try again.\");\n      setPollingActive(false);\n      setIsProcessing(false); // Re-enable input on error\n      return true;\n    }\n  }, [sessionId, pollingActive]);\n\n  // Set up polling effect\n  useEffect(() => {\n    let interval;\n    if (pollingActive) {\n      interval = setInterval(() => {\n        pollResults();\n      }, 1000); // Poll every second\n    }\n    return () => {\n      if (interval) clearInterval(interval);\n    };\n  }, [pollingActive, sessionId, pollResults]);\n\n  // Handle user prompt submission\n  const handlePromptSubmit = async e => {\n    e.preventDefault();\n    const prompt = currentPrompt.trim();\n    if (!prompt || isProcessing) return;\n    setIsProcessing(true);\n    setFinalAnswer(null); // Clear previous final answer\n    setSessionResults({}); // Clear previous results\n\n    // Optimistically update the chat history with the user's new prompt\n    setChatHistory(prev => [...prev, {\n      type: 'human',\n      content: prompt\n    }]);\n    try {\n      // If we have a session ID, send it to continue the conversation.\n      // Otherwise, the backend will create a new session.\n      const payload = {\n        query: prompt\n      };\n      if (sessionId) {\n        payload.session_id = sessionId;\n      }\n      const response = await axios.post(`${API_URL}/query`, payload);\n      const data = response.data;\n      setSessionId(data.session_id);\n      setPollingActive(true);\n      setSessionStatus('running');\n    } catch (error) {\n      console.error(\"Error processing query:\", error);\n      const errorMessage = \"An error occurred. The API server may be offline.\";\n      setError(errorMessage);\n      setChatHistory(prev => [...prev, {\n        type: 'ai',\n        content: errorMessage\n      }]);\n      setIsProcessing(false);\n      setPollingActive(false);\n    }\n\n    // Clear the input field\n    setCurrentPrompt('');\n  };\n\n  // Handle starting a new query\n  const handleNewQuery = () => {\n    setSessionId(null);\n    setSessionStatus('idle');\n    setSessionResults({});\n    setFinalAnswer(null);\n    setPollingActive(false);\n    setIsProcessing(false);\n    setChatHistory([]);\n    setSchemes([]);\n  };\n  const showSessionDetails = sessionStatus !== 'idle' && (Object.keys(sessionResults).length > 0 || finalAnswer);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading schemes...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"split-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"visualization-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vis-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"3D Visualization\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Click on a scheme to view its details in a side panel. Click and drag to rotate, scroll to zoom.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"visualization-content\",\n          children: /*#__PURE__*/_jsxDEV(SchemeGrid, {\n            schemes: schemes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"agent-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"agent-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"AGENT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"agent-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-log\",\n            children: [chatHistory.map((msg, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n              message: msg\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this)), isProcessing && !finalAnswer && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-dots\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \".\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 78\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \".\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 92\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \".\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 106\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 48\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), showSessionDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"agent-session-details\",\n            children: /*#__PURE__*/_jsxDEV(AgentSession, {\n              sessionId: sessionId,\n              status: sessionStatus,\n              results: sessionResults,\n              finalAnswer: finalAnswer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this), chatHistory.length === 0 && !isProcessing && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"agent-placeholder\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Enter a prompt below to start a new session.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Try queries like \\\"show me a house\\\" or \\\"design an office building\\\".\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-input-area\",\n      children: [sessionId && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"new-query-button\",\n        onClick: handleNewQuery,\n        disabled: isProcessing,\n        children: \"New Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handlePromptSubmit,\n        className: \"chat-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: currentPrompt,\n          onChange: e => setCurrentPrompt(e.target.value),\n          placeholder: \"Enter your prompt here...\",\n          disabled: isProcessing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isProcessing || !currentPrompt.trim(),\n          children: isProcessing ? \"Processing...\" : \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"hiJT8BKA2wFnzKXmYe0vvI9Adw0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","SchemeGrid","AgentSession","ChatMessage","jsxDEV","_jsxDEV","API_URL","App","_s","schemes","setSchemes","loading","setLoading","error","setError","currentPrompt","setCurrentPrompt","sessionId","setSessionId","sessionStatus","setSessionStatus","sessionResults","setSessionResults","finalAnswer","setFinalAnswer","isProcessing","setIsProcessing","chatHistory","setChatHistory","pollingActive","setPollingActive","err","console","pollResults","response","get","data","results","chat_history","Array","isArray","final_answer","log","status","interval","setInterval","clearInterval","handlePromptSubmit","e","preventDefault","prompt","trim","prev","type","content","payload","query","session_id","post","errorMessage","handleNewQuery","showSessionDetails","Object","keys","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","message","onClick","disabled","onSubmit","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/shriti/Downloads/CapstoneProj/FreshCode/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport SchemeGrid from './components/SchemeGrid'; // Component for 3D visualization\nimport AgentSession from './components/AgentSession'; // Component to show agent's work\n// Import mock data from service instead of hardcoding\nimport ChatMessage from './components/ChatMessage'; // Component to render a single chat message\n\n// API URL for the backend\nconst API_URL = \"http://localhost:8001\"; // FastAPI backend URL\n\n\n\nfunction App() {\n  // State for schemes/cuboids\n  const [schemes, setSchemes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  \n  // Agent state\n  const [currentPrompt, setCurrentPrompt] = useState('');\n  const [sessionId, setSessionId] = useState(null);\n  const [sessionStatus, setSessionStatus] = useState('idle');\n  const [sessionResults, setSessionResults] = useState({});\n  const [finalAnswer, setFinalAnswer] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [chatHistory, setChatHistory] = useState([]);\n  const [pollingActive, setPollingActive] = useState(false);\n\n  // Load schemes on component mount\n  useEffect(() => {\n    // Only load mock schemes if there's no active session\n    if (!sessionId) {\n      try {\n        setSchemes([]); // Start with no schemes\n        setLoading(false);\n      } catch (err) {\n        console.error(\"Error loading schemes:\", err);\n        setError(\"Failed to load schemes. Please try again later.\");\n        setLoading(false);\n      }\n    }\n  }, [sessionId]);\n\n  // Poll results function with useCallback to avoid dependency issues\n  const pollResults = useCallback(async () => {\n    if (!sessionId || !pollingActive) return false;\n    \n    try {\n      const response = await axios.get(`${API_URL}/session/${sessionId}`);\n      const data = response.data;\n      \n      // Update results\n      setSessionResults(data.results || {});\n\n      // Update chat history\n      if (data.chat_history && Array.isArray(data.chat_history)) {\n        setChatHistory(data.chat_history);\n      }\n      \n      // Update final answer\n      if (data.final_answer) {\n        setFinalAnswer(data.final_answer);\n      }\n      \n      // Update schemes - completely replace any existing schemes\n      if (data.schemes && Array.isArray(data.schemes)) {\n        console.log(\"Received schemes:\", data.schemes);\n        setSchemes(data.schemes);\n      }\n      \n      // Check if processing is complete\n      if (data.status === \"completed\" || data.status === \"error\") {\n        setPollingActive(false);\n        setIsProcessing(false); // Re-enable input\n        setSessionStatus(data.status);\n        return true;\n      }\n      \n      return false;\n    } catch (error) {\n      console.error(\"Error polling results:\", error);\n      setError(\"Failed to get results. Please try again.\");\n      setPollingActive(false);\n      setIsProcessing(false); // Re-enable input on error\n      return true;\n    }\n  }, [sessionId, pollingActive]);\n\n  // Set up polling effect\n  useEffect(() => {\n    let interval;\n    \n    if (pollingActive) {\n      interval = setInterval(() => {\n        pollResults();\n      }, 1000); // Poll every second\n    }\n    \n    return () => {\n      if (interval) clearInterval(interval);\n    };\n  }, [pollingActive, sessionId, pollResults]);\n\n  // Handle user prompt submission\n  const handlePromptSubmit = async (e) => {\n    e.preventDefault();\n    \n    const prompt = currentPrompt.trim();\n    if (!prompt || isProcessing) return;\n    \n    setIsProcessing(true);\n    setFinalAnswer(null); // Clear previous final answer\n    setSessionResults({}); // Clear previous results\n\n    // Optimistically update the chat history with the user's new prompt\n    setChatHistory(prev => [...prev, { type: 'human', content: prompt }]);\n    \n    try {\n      // If we have a session ID, send it to continue the conversation.\n      // Otherwise, the backend will create a new session.\n      const payload = { query: prompt };\n      if (sessionId) {\n        payload.session_id = sessionId;\n      }\n\n      const response = await axios.post(`${API_URL}/query`, payload);\n      const data = response.data;\n      \n      setSessionId(data.session_id);\n      setPollingActive(true);\n      setSessionStatus('running');\n\n    } catch (error) {\n      console.error(\"Error processing query:\", error);\n      const errorMessage = \"An error occurred. The API server may be offline.\";\n      setError(errorMessage);\n      setChatHistory(prev => [...prev, { type: 'ai', content: errorMessage }]);\n      setIsProcessing(false);\n      setPollingActive(false);\n    }\n    \n    // Clear the input field\n    setCurrentPrompt('');\n  };\n  \n  // Handle starting a new query\n  const handleNewQuery = () => {\n    setSessionId(null);\n    setSessionStatus('idle');\n    setSessionResults({});\n    setFinalAnswer(null);\n    setPollingActive(false);\n    setIsProcessing(false);\n    setChatHistory([]);\n    setSchemes([]);\n  };\n\n  const showSessionDetails = sessionStatus !== 'idle' && (Object.keys(sessionResults).length > 0 || finalAnswer);\n\n  if (loading) {\n    return <div className=\"loading\">Loading schemes...</div>;\n  }\n\n  if (error) {\n    return <div className=\"loading\">{error}</div>;\n  }\n\n  return (\n    <div className=\"app-container\">\n      {/* Split layout with visualization area and agent area */}\n      <div className=\"split-layout\">\n        {/* Visualization Area (Left Side) */}\n        <div className=\"visualization-area\">\n          <div className=\"vis-header\">\n            <h3>3D Visualization</h3>\n            <p>Click on a scheme to view its details in a side panel. Click and drag to rotate, scroll to zoom.</p>\n          </div>\n          \n          {/* Add scrollable container */}\n          <div className=\"visualization-content\">\n            {/* Use the SchemeGrid component */}\n            <SchemeGrid schemes={schemes} />\n          </div>\n        </div>\n        \n        {/* Agent Area (Right Side) */}\n        <div className=\"agent-area\">\n          <div className=\"agent-header\">\n            <h2>AGENT</h2>\n          </div>\n          \n          <div className=\"agent-content\">\n            <div className=\"chat-log\">\n              {chatHistory.map((msg, index) => (\n                <ChatMessage key={index} message={msg} />\n              ))}\n              {isProcessing && !finalAnswer && <div className=\"loading-dots\"><span>.</span><span>.</span><span>.</span></div>}\n            </div>\n\n            {showSessionDetails && (\n              <div className=\"agent-session-details\">\n                <AgentSession\n                  sessionId={sessionId}\n                  status={sessionStatus}\n                  results={sessionResults}\n                  finalAnswer={finalAnswer}\n                />\n              </div>\n            )}\n\n            {chatHistory.length === 0 && !isProcessing && (\n              <div className=\"agent-placeholder\">\n                <p>Enter a prompt below to start a new session.</p>\n                <p>Try queries like \"show me a house\" or \"design an office building\".</p>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* User Input Area - moved to the bottom */}\n      <div className=\"user-input-area\">\n        {sessionId && (\n          <button className=\"new-query-button\" onClick={handleNewQuery} disabled={isProcessing}>\n            New Chat\n          </button>\n        )}\n        <form onSubmit={handlePromptSubmit} className=\"chat-form\">\n          <input\n            type=\"text\"\n            value={currentPrompt}\n            onChange={(e) => setCurrentPrompt(e.target.value)}\n            placeholder=\"Enter your prompt here...\"\n            disabled={isProcessing}\n          />\n          <button type=\"submit\" disabled={isProcessing || !currentPrompt.trim()}>\n            {isProcessing ? \"Processing...\" : \"Send\"}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAClB,OAAOC,UAAU,MAAM,yBAAyB,CAAC,CAAC;AAClD,OAAOC,YAAY,MAAM,2BAA2B,CAAC,CAAC;AACtD;AACA,OAAOC,WAAW,MAAM,0BAA0B,CAAC,CAAC;;AAEpD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,OAAO,GAAG,uBAAuB,CAAC,CAAC;;AAIzC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAM,CAACkB,aAAa,EAAEC,gBAAgB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACsB,aAAa,EAAEC,gBAAgB,CAAC,GAAGvB,QAAQ,CAAC,MAAM,CAAC;EAC1D,MAAM,CAACwB,cAAc,EAAEC,iBAAiB,CAAC,GAAGzB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxD,MAAM,CAAC0B,WAAW,EAAEC,cAAc,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAAC4B,YAAY,EAAEC,eAAe,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAC8B,WAAW,EAAEC,cAAc,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACgC,aAAa,EAAEC,gBAAgB,CAAC,GAAGjC,QAAQ,CAAC,KAAK,CAAC;;EAEzD;EACAC,SAAS,CAAC,MAAM;IACd;IACA,IAAI,CAACmB,SAAS,EAAE;MACd,IAAI;QACFP,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;QAChBE,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOmB,GAAG,EAAE;QACZC,OAAO,CAACnB,KAAK,CAAC,wBAAwB,EAAEkB,GAAG,CAAC;QAC5CjB,QAAQ,CAAC,iDAAiD,CAAC;QAC3DF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF;EACF,CAAC,EAAE,CAACK,SAAS,CAAC,CAAC;;EAEf;EACA,MAAMgB,WAAW,GAAGlC,WAAW,CAAC,YAAY;IAC1C,IAAI,CAACkB,SAAS,IAAI,CAACY,aAAa,EAAE,OAAO,KAAK;IAE9C,IAAI;MACF,MAAMK,QAAQ,GAAG,MAAMlC,KAAK,CAACmC,GAAG,CAAC,GAAG7B,OAAO,YAAYW,SAAS,EAAE,CAAC;MACnE,MAAMmB,IAAI,GAAGF,QAAQ,CAACE,IAAI;;MAE1B;MACAd,iBAAiB,CAACc,IAAI,CAACC,OAAO,IAAI,CAAC,CAAC,CAAC;;MAErC;MACA,IAAID,IAAI,CAACE,YAAY,IAAIC,KAAK,CAACC,OAAO,CAACJ,IAAI,CAACE,YAAY,CAAC,EAAE;QACzDV,cAAc,CAACQ,IAAI,CAACE,YAAY,CAAC;MACnC;;MAEA;MACA,IAAIF,IAAI,CAACK,YAAY,EAAE;QACrBjB,cAAc,CAACY,IAAI,CAACK,YAAY,CAAC;MACnC;;MAEA;MACA,IAAIL,IAAI,CAAC3B,OAAO,IAAI8B,KAAK,CAACC,OAAO,CAACJ,IAAI,CAAC3B,OAAO,CAAC,EAAE;QAC/CuB,OAAO,CAACU,GAAG,CAAC,mBAAmB,EAAEN,IAAI,CAAC3B,OAAO,CAAC;QAC9CC,UAAU,CAAC0B,IAAI,CAAC3B,OAAO,CAAC;MAC1B;;MAEA;MACA,IAAI2B,IAAI,CAACO,MAAM,KAAK,WAAW,IAAIP,IAAI,CAACO,MAAM,KAAK,OAAO,EAAE;QAC1Db,gBAAgB,CAAC,KAAK,CAAC;QACvBJ,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;QACxBN,gBAAgB,CAACgB,IAAI,CAACO,MAAM,CAAC;QAC7B,OAAO,IAAI;MACb;MAEA,OAAO,KAAK;IACd,CAAC,CAAC,OAAO9B,KAAK,EAAE;MACdmB,OAAO,CAACnB,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CC,QAAQ,CAAC,0CAA0C,CAAC;MACpDgB,gBAAgB,CAAC,KAAK,CAAC;MACvBJ,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;MACxB,OAAO,IAAI;IACb;EACF,CAAC,EAAE,CAACT,SAAS,EAAEY,aAAa,CAAC,CAAC;;EAE9B;EACA/B,SAAS,CAAC,MAAM;IACd,IAAI8C,QAAQ;IAEZ,IAAIf,aAAa,EAAE;MACjBe,QAAQ,GAAGC,WAAW,CAAC,MAAM;QAC3BZ,WAAW,CAAC,CAAC;MACf,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IACZ;IAEA,OAAO,MAAM;MACX,IAAIW,QAAQ,EAAEE,aAAa,CAACF,QAAQ,CAAC;IACvC,CAAC;EACH,CAAC,EAAE,CAACf,aAAa,EAAEZ,SAAS,EAAEgB,WAAW,CAAC,CAAC;;EAE3C;EACA,MAAMc,kBAAkB,GAAG,MAAOC,CAAC,IAAK;IACtCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,MAAM,GAAGnC,aAAa,CAACoC,IAAI,CAAC,CAAC;IACnC,IAAI,CAACD,MAAM,IAAIzB,YAAY,EAAE;IAE7BC,eAAe,CAAC,IAAI,CAAC;IACrBF,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;IACtBF,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;IAEvB;IACAM,cAAc,CAACwB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;MAAEC,IAAI,EAAE,OAAO;MAAEC,OAAO,EAAEJ;IAAO,CAAC,CAAC,CAAC;IAErE,IAAI;MACF;MACA;MACA,MAAMK,OAAO,GAAG;QAAEC,KAAK,EAAEN;MAAO,CAAC;MACjC,IAAIjC,SAAS,EAAE;QACbsC,OAAO,CAACE,UAAU,GAAGxC,SAAS;MAChC;MAEA,MAAMiB,QAAQ,GAAG,MAAMlC,KAAK,CAAC0D,IAAI,CAAC,GAAGpD,OAAO,QAAQ,EAAEiD,OAAO,CAAC;MAC9D,MAAMnB,IAAI,GAAGF,QAAQ,CAACE,IAAI;MAE1BlB,YAAY,CAACkB,IAAI,CAACqB,UAAU,CAAC;MAC7B3B,gBAAgB,CAAC,IAAI,CAAC;MACtBV,gBAAgB,CAAC,SAAS,CAAC;IAE7B,CAAC,CAAC,OAAOP,KAAK,EAAE;MACdmB,OAAO,CAACnB,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,MAAM8C,YAAY,GAAG,mDAAmD;MACxE7C,QAAQ,CAAC6C,YAAY,CAAC;MACtB/B,cAAc,CAACwB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;QAAEC,IAAI,EAAE,IAAI;QAAEC,OAAO,EAAEK;MAAa,CAAC,CAAC,CAAC;MACxEjC,eAAe,CAAC,KAAK,CAAC;MACtBI,gBAAgB,CAAC,KAAK,CAAC;IACzB;;IAEA;IACAd,gBAAgB,CAAC,EAAE,CAAC;EACtB,CAAC;;EAED;EACA,MAAM4C,cAAc,GAAGA,CAAA,KAAM;IAC3B1C,YAAY,CAAC,IAAI,CAAC;IAClBE,gBAAgB,CAAC,MAAM,CAAC;IACxBE,iBAAiB,CAAC,CAAC,CAAC,CAAC;IACrBE,cAAc,CAAC,IAAI,CAAC;IACpBM,gBAAgB,CAAC,KAAK,CAAC;IACvBJ,eAAe,CAAC,KAAK,CAAC;IACtBE,cAAc,CAAC,EAAE,CAAC;IAClBlB,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,MAAMmD,kBAAkB,GAAG1C,aAAa,KAAK,MAAM,KAAK2C,MAAM,CAACC,IAAI,CAAC1C,cAAc,CAAC,CAAC2C,MAAM,GAAG,CAAC,IAAIzC,WAAW,CAAC;EAE9G,IAAIZ,OAAO,EAAE;IACX,oBAAON,OAAA;MAAK4D,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC1D;EAEA,IAAIzD,KAAK,EAAE;IACT,oBAAOR,OAAA;MAAK4D,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAErD;IAAK;MAAAsD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC/C;EAEA,oBACEjE,OAAA;IAAK4D,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAE5B7D,OAAA;MAAK4D,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAE3B7D,OAAA;QAAK4D,SAAS,EAAC,oBAAoB;QAAAC,QAAA,gBACjC7D,OAAA;UAAK4D,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzB7D,OAAA;YAAA6D,QAAA,EAAI;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACzBjE,OAAA;YAAA6D,QAAA,EAAG;UAAgG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpG,CAAC,eAGNjE,OAAA;UAAK4D,SAAS,EAAC,uBAAuB;UAAAC,QAAA,eAEpC7D,OAAA,CAACJ,UAAU;YAACQ,OAAO,EAAEA;UAAQ;YAAA0D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGNjE,OAAA;QAAK4D,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB7D,OAAA;UAAK4D,SAAS,EAAC,cAAc;UAAAC,QAAA,eAC3B7D,OAAA;YAAA6D,QAAA,EAAI;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC,eAENjE,OAAA;UAAK4D,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5B7D,OAAA;YAAK4D,SAAS,EAAC,UAAU;YAAAC,QAAA,GACtBvC,WAAW,CAAC4C,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBAC1BpE,OAAA,CAACF,WAAW;cAAauE,OAAO,EAAEF;YAAI,GAApBC,KAAK;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAiB,CACzC,CAAC,EACD7C,YAAY,IAAI,CAACF,WAAW,iBAAIlB,OAAA;cAAK4D,SAAS,EAAC,cAAc;cAAAC,QAAA,gBAAC7D,OAAA;gBAAA6D,QAAA,EAAM;cAAC;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAAAjE,OAAA;gBAAA6D,QAAA,EAAM;cAAC;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAAAjE,OAAA;gBAAA6D,QAAA,EAAM;cAAC;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5G,CAAC,EAELT,kBAAkB,iBACjBxD,OAAA;YAAK4D,SAAS,EAAC,uBAAuB;YAAAC,QAAA,eACpC7D,OAAA,CAACH,YAAY;cACXe,SAAS,EAAEA,SAAU;cACrB0B,MAAM,EAAExB,aAAc;cACtBkB,OAAO,EAAEhB,cAAe;cACxBE,WAAW,EAAEA;YAAY;cAAA4C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1B;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CACN,EAEA3C,WAAW,CAACqC,MAAM,KAAK,CAAC,IAAI,CAACvC,YAAY,iBACxCpB,OAAA;YAAK4D,SAAS,EAAC,mBAAmB;YAAAC,QAAA,gBAChC7D,OAAA;cAAA6D,QAAA,EAAG;YAA4C;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eACnDjE,OAAA;cAAA6D,QAAA,EAAG;YAAkE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtE,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNjE,OAAA;MAAK4D,SAAS,EAAC,iBAAiB;MAAAC,QAAA,GAC7BjD,SAAS,iBACRZ,OAAA;QAAQ4D,SAAS,EAAC,kBAAkB;QAACU,OAAO,EAAEf,cAAe;QAACgB,QAAQ,EAAEnD,YAAa;QAAAyC,QAAA,EAAC;MAEtF;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACT,eACDjE,OAAA;QAAMwE,QAAQ,EAAE9B,kBAAmB;QAACkB,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACvD7D,OAAA;UACEgD,IAAI,EAAC,MAAM;UACXyB,KAAK,EAAE/D,aAAc;UACrBgE,QAAQ,EAAG/B,CAAC,IAAKhC,gBAAgB,CAACgC,CAAC,CAACgC,MAAM,CAACF,KAAK,CAAE;UAClDG,WAAW,EAAC,2BAA2B;UACvCL,QAAQ,EAAEnD;QAAa;UAAA0C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC,eACFjE,OAAA;UAAQgD,IAAI,EAAC,QAAQ;UAACuB,QAAQ,EAAEnD,YAAY,IAAI,CAACV,aAAa,CAACoC,IAAI,CAAC,CAAE;UAAAe,QAAA,EACnEzC,YAAY,GAAG,eAAe,GAAG;QAAM;UAAA0C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC9D,EAAA,CAtOQD,GAAG;AAAA2E,EAAA,GAAH3E,GAAG;AAwOZ,eAAeA,GAAG;AAAC,IAAA2E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}