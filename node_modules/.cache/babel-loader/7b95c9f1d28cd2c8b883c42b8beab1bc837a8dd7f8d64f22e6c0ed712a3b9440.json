{"ast":null,"code":"var _jsxFileName = \"/Users/shriti/Downloads/CapstoneProj/FreshCode/src/components/AgentSession.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './AgentSession.css';\n\n// Component to display a single tool result\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ToolResult = ({\n  toolName,\n  status,\n  result\n}) => {\n  _s();\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  // Status indicators\n  let statusIndicator = null;\n  if (status === 'Finished') statusIndicator = '✅';else if (status === 'Running') statusIndicator = '⏳';else if (status === 'Error') statusIndicator = '❌';\n\n  // Toggle expanded state\n  const toggleExpanded = () => {\n    setIsExpanded(!isExpanded);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tool-result\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tool-summary\",\n      onClick: toggleExpanded,\n      children: [isExpanded ? '▼' : '▶', /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tool-name\",\n          children: [\"Tool: \", toolName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tool-status\",\n          children: [statusIndicator && statusIndicator, \" \", status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tool-content\",\n      children: result === \"Executing...\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-message\",\n        children: \"Tool is currently executing...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"result-code\",\n        children: result || 'No result available'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n// Component to display the final answer\n_s(ToolResult, \"FPNvbbHVlWWR4LKxxNntSxiIS38=\");\n_c = ToolResult;\nconst FinalAnswer = ({\n  answer\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"final-answer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Final Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answer-content\",\n      children: answer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n// Main component for displaying the agent session\n_c2 = FinalAnswer;\nconst AgentSession = ({\n  sessionId,\n  status,\n  results,\n  finalAnswer,\n  onNewQuery\n}) => {\n  // Sort results by key to ensure they appear in order\n  const sortedResults = Object.entries(results || {}).sort((a, b) => a[0].localeCompare(b[0]));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"agent-session\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"session-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Session ID: \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: sessionId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: status.toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), sortedResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Intermediate Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-list\",\n        children: sortedResults.map(([key, result]) => /*#__PURE__*/_jsxDEV(ToolResult, {\n          toolName: result.tool,\n          status: result.status,\n          result: result.result\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), finalAnswer && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FinalAnswer, {\n        answer: finalAnswer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"new-query-button\",\n        onClick: onNewQuery,\n        children: \"Start New Query\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_c3 = AgentSession;\nexport default AgentSession;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ToolResult\");\n$RefreshReg$(_c2, \"FinalAnswer\");\n$RefreshReg$(_c3, \"AgentSession\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","ToolResult","toolName","status","result","_s","isExpanded","setIsExpanded","statusIndicator","toggleExpanded","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","FinalAnswer","answer","_c2","AgentSession","sessionId","results","finalAnswer","onNewQuery","sortedResults","Object","entries","sort","a","b","localeCompare","toUpperCase","length","map","key","tool","_c3","$RefreshReg$"],"sources":["/Users/shriti/Downloads/CapstoneProj/FreshCode/src/components/AgentSession.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './AgentSession.css';\n\n// Component to display a single tool result\nconst ToolResult = ({ toolName, status, result }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n  \n  // Status indicators\n  let statusIndicator = null;\n  if (status === 'Finished') statusIndicator = '✅';\n  else if (status === 'Running') statusIndicator = '⏳';\n  else if (status === 'Error') statusIndicator = '❌';\n  \n  // Toggle expanded state\n  const toggleExpanded = () => {\n    setIsExpanded(!isExpanded);\n  };\n  \n  return (\n    <div className=\"tool-result\">\n      <div className=\"tool-summary\" onClick={toggleExpanded}>\n        {isExpanded ? '▼' : '▶'} \n        <div className=\"tool-info\">\n          <span className=\"tool-name\">Tool: {toolName}</span>\n          <span className=\"tool-status\">\n            {statusIndicator && statusIndicator} {status}\n          </span>\n        </div>\n      </div>\n      \n      {isExpanded && (\n        <div className=\"tool-content\">\n          {result === \"Executing...\" ? (\n            <div className=\"info-message\">Tool is currently executing...</div>\n          ) : (\n            <pre className=\"result-code\">{result || 'No result available'}</pre>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Component to display the final answer\nconst FinalAnswer = ({ answer }) => {\n  return (\n    <div className=\"final-answer\">\n      <h3>Final Answer</h3>\n      <div className=\"answer-content\">{answer}</div>\n    </div>\n  );\n};\n\n// Main component for displaying the agent session\nconst AgentSession = ({ sessionId, status, results, finalAnswer, onNewQuery }) => {\n  // Sort results by key to ensure they appear in order\n  const sortedResults = Object.entries(results || {}).sort((a, b) => a[0].localeCompare(b[0]));\n\n  return (\n    <div className=\"agent-session\">\n      <div className=\"session-info\">\n        <p>Session ID: <code>{sessionId}</code></p>\n        <p>Status: <strong>{status.toUpperCase()}</strong></p>\n      </div>\n\n      {sortedResults.length > 0 && (\n        <div className=\"results-section\">\n          <h3>Intermediate Results</h3>\n          <div className=\"results-list\">\n            {sortedResults.map(([key, result]) => (\n              <ToolResult\n                key={key}\n                toolName={result.tool}\n                status={result.status}\n                result={result.result}\n              />\n            ))}\n          </div>\n        </div>\n      )}\n\n      {finalAnswer && (\n        <>\n          <FinalAnswer answer={finalAnswer} />\n          <button className=\"new-query-button\" onClick={onNewQuery}>\n            Start New Query\n          </button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default AgentSession; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}